/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import dao.HoaDonChiTietDAO;
import dao.HoaDonDAO;
import dao.LoaiMonDAO;
import dao.ThongKeDAO;
import entity.LoaiMon;
import entity.ThongKe.*;
import java.awt.Font;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLayeredPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.ui.TextAnchor;
import utils.MsgBox;

/**
 *
 * @author ADMIN
 */
public class ThongKeJFrame extends javax.swing.JFrame {

    LoaiMonDAO LMdao = new LoaiMonDAO();
    ThongKeDAO TKdao = new ThongKeDAO();
    HoaDonDAO dao = new HoaDonDAO();
    HoaDonChiTietDAO daoct = new HoaDonChiTietDAO();
    DecimalFormat fmTien = new DecimalFormat("#,#00");
    SimpleDateFormat fmThoiGian = new SimpleDateFormat("dd/MM");
    SimpleDateFormat fmThoiGianCT = new SimpleDateFormat("dd/MM/yyyy");
    NgayLap nl = TKdao.getNgayLap();

    /**
     * Creates new form ThongKeJFrame
     */
    public ThongKeJFrame() {
        ImageIcon icon = new ImageIcon("./img/logo.jpg");
        setIconImage(icon.getImage());
        
        setTitle("Hệ thống quản lý nhà hàng L'ESSALE - Thống Kê");
        initComponents();
        fillComboBoxLoaiMon();
        loadBieuDoMonAn();
        loadBieuDoDoanhThu();
//        loadCboNgayLap();
        loadCboNgayLapCT();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cboLoaiMon = new javax.swing.JComboBox<>();
        pnlThongKe = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        pnlDoanhThu = new javax.swing.JPanel();
        ycrNam = new com.toedter.calendar.JYearChooser();
        lblTongDoanhThuNam = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoanhThuCT = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        clrTuNgayCT = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        clrDenNgayCT = new com.toedter.calendar.JDateChooser();
        lblTongDoanhThu = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel2.setText("LOẠI MÓN ĂN");

        cboLoaiMon.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        cboLoaiMon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboLoaiMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiMonActionPerformed(evt);
            }
        });

        pnlThongKe.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout pnlThongKeLayout = new javax.swing.GroupLayout(pnlThongKe);
        pnlThongKe.setLayout(pnlThongKeLayout);
        pnlThongKeLayout.setHorizontalGroup(
            pnlThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlThongKeLayout.setVerticalGroup(
            pnlThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 666, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlThongKe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboLoaiMon, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 873, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboLoaiMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlThongKe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabs.addTab("DOANH SỐ MÓN ĂN", jPanel1);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("NĂM:");

        pnlDoanhThu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout pnlDoanhThuLayout = new javax.swing.GroupLayout(pnlDoanhThu);
        pnlDoanhThu.setLayout(pnlDoanhThuLayout);
        pnlDoanhThuLayout.setHorizontalGroup(
            pnlDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1279, Short.MAX_VALUE)
        );
        pnlDoanhThuLayout.setVerticalGroup(
            pnlDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 669, Short.MAX_VALUE)
        );

        ycrNam.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ycrNamPropertyChange(evt);
            }
        });

        lblTongDoanhThuNam.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblTongDoanhThuNam.setForeground(new java.awt.Color(255, 0, 51));
        lblTongDoanhThuNam.setText("Tổng doanh thu năm:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(pnlDoanhThu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ycrNam, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTongDoanhThuNam, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ycrNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(lblTongDoanhThuNam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDoanhThu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabs.addTab("DOANH THU", jPanel2);

        tblDoanhThuCT.setAutoCreateRowSorter(true);
        tblDoanhThuCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã Hoá Đơn", "Ngày lập", "Mã Khách hàng", "Tổng tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDoanhThuCT.setRowHeight(25);
        jScrollPane1.setViewportView(tblDoanhThuCT);
        if (tblDoanhThuCT.getColumnModel().getColumnCount() > 0) {
            tblDoanhThuCT.getColumnModel().getColumn(0).setMinWidth(70);
            tblDoanhThuCT.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblDoanhThuCT.getColumnModel().getColumn(0).setMaxWidth(200);
            tblDoanhThuCT.getColumnModel().getColumn(1).setMinWidth(200);
            tblDoanhThuCT.getColumnModel().getColumn(1).setPreferredWidth(400);
            tblDoanhThuCT.getColumnModel().getColumn(1).setMaxWidth(550);
            tblDoanhThuCT.getColumnModel().getColumn(2).setMinWidth(100);
            tblDoanhThuCT.getColumnModel().getColumn(2).setPreferredWidth(300);
            tblDoanhThuCT.getColumnModel().getColumn(2).setMaxWidth(400);
        }

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("TỪ NGÀY");

        clrTuNgayCT.setDateFormatString("dd-MM-yyyy");
        clrTuNgayCT.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                clrTuNgayCTPropertyChange(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("ĐẾN NGÀY");

        clrDenNgayCT.setDateFormatString("dd-MM-yyyy");
        clrDenNgayCT.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                clrDenNgayCTPropertyChange(evt);
            }
        });

        lblTongDoanhThu.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTongDoanhThu.setForeground(new java.awt.Color(255, 0, 51));
        lblTongDoanhThu.setText("Tổng doanh thu: 900.000.000");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clrTuNgayCT, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clrDenNgayCT, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 341, Short.MAX_VALUE)
                        .addComponent(lblTongDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblTongDoanhThu)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(clrTuNgayCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(clrDenNgayCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)))
                .addContainerGap())
        );

        tabs.addTab("DOANH THU CHI TIẾT", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabs))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cboLoaiMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiMonActionPerformed
        loadBieuDoMonAn();
    }//GEN-LAST:event_cboLoaiMonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        new TrangChuJFrame().setVisible(true);
        dispose();
    }//GEN-LAST:event_formWindowClosing

    private void clrTuNgayCTPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_clrTuNgayCTPropertyChange
        loadCboNgayLapCT();
    }//GEN-LAST:event_clrTuNgayCTPropertyChange

    private void clrDenNgayCTPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_clrDenNgayCTPropertyChange
        loadCboNgayLapCT();
    }//GEN-LAST:event_clrDenNgayCTPropertyChange

    private void ycrNamPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ycrNamPropertyChange
        // TODO add your handling code here:
        loadBieuDoDoanhThu();
    }//GEN-LAST:event_ycrNamPropertyChange

    /**
     * @param args the command line arguments
     */
    public void selectTab(int index) {
        tabs.setSelectedIndex(index);
    }

    void fillComboBoxLoaiMon() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoaiMon.getModel();
        model.removeAllElements();
        model.addElement("All");
        List<LoaiMon> list = LMdao.selectAll();
        for (LoaiMon lm : list) {
            model.addElement(lm);
        }
    }

//    void fillTableMonAn() {
//        DefaultTableModel model = (DefaultTableModel) tblMonAn.getModel();
//        model.setRowCount(0);
//        tblMonAn.setModel(model);
//        LoaiMon lm = (LoaiMon) cboLoaiMon.getSelectedItem();
//        List<Object[]> list = TKdao.getSum(Integer.parseInt(lm.getMaLoai()));
//        for (Object[] row : list) {
//            double soluong = (double) row[2];
//            model.addRow(new Object[]{
//                row[0], row[1], soluong
//            });
//        }
//    }
    public void loadCboNgayLapCT() {

        if (clrDenNgayCT.getDate() == null || clrTuNgayCT.getDate() == null) {
            clrTuNgayCT.setSelectableDateRange(nl.getMin(), nl.getMax());
            clrDenNgayCT.setSelectableDateRange(nl.getMin(), nl.getMax());
            clrTuNgayCT.setDate(nl.getMin());
            clrDenNgayCT.setDate(nl.getMax());
            return;
        }

        clrTuNgayCT.setMaxSelectableDate(clrDenNgayCT.getDate());
        clrDenNgayCT.setMinSelectableDate(clrTuNgayCT.getDate());

        fillTable();
    }

    public void loadBieuDoDoanhThu() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        int year = ycrNam.getYear();
        List<DoanhThuTheoNam> list = TKdao.getDoanhThuTheoNam(year);

        long tongDoanhThuNam = 0;
        // Tạo biểu đồ
        if (list.size() == 0) {
            // Tạo biểu đồ rỗng với một chữ lớn ở giữa
            JFreeChart chart = ChartFactory.createBarChart(
                    "Không có dữ liệu", // Tiêu đề biểu đồ
                    "", // Trục X (danh mục)
                    "", // Trục Y
                    dataset, // Dữ liệu rỗng
                    PlotOrientation.VERTICAL, // Hướng của biểu đồ
                    false, // Hiển thị legend
                    false, // Hiển thị tooltips
                    false // Hiển thị URL
            );
            
            pnlDoanhThu.removeAll();
            
            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setBounds(0, 0, pnlDoanhThu.getWidth(), pnlDoanhThu.getHeight());
            pnlDoanhThu.add(chartPanel, JLayeredPane.PALETTE_LAYER);
        } else {
            for (int i = 1; i <= 12; i++) {
            long tongTien = 0;

            for (DoanhThuTheoNam dttn : list) {
                if (dttn.getMonth() == i) {
                    tongTien = dttn.getTongTien();
                    break;
                }
            }
            tongDoanhThuNam += tongTien;
            dataset.addValue(tongTien, "Tổng tiền", "" + i);
        }
            
            JFreeChart chart = ChartFactory.createBarChart3D(
                    "Biểu đồ doanh thu theo năm", // Tiêu đề biểu đồ
                    "Tháng", // Trục X (danh mục)
                    "Tổng tiền", // Trục Y
                    dataset, // Dữ liệu
                    PlotOrientation.VERTICAL, // Hướng của biểu đồ
                    false, // Hiển thị legend
                    true, // Hiển thị tooltips
                    false // Hiển thị URL
            );

            CategoryPlot plot = chart.getCategoryPlot();
            BarRenderer renderer = (BarRenderer) plot.getRenderer();

            renderer.setItemLabelGenerator(new StandardCategoryItemLabelGenerator("{2}", fmTien));
            renderer.setItemLabelsVisible(true);
            renderer.setItemLabelFont(new Font("Segoe UI", Font.BOLD, 12));
            renderer.setPositiveItemLabelPosition(new org.jfree.chart.labels.ItemLabelPosition(
                    org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12, TextAnchor.BOTTOM_CENTER
            ));

            pnlDoanhThu.removeAll();

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setBounds(0, 0, pnlDoanhThu.getWidth(), pnlDoanhThu.getHeight());
            pnlDoanhThu.add(chartPanel, JLayeredPane.PALETTE_LAYER);
        }

        lblTongDoanhThuNam.setText("Tổng doanh thu năm: "+fmTien.format(tongDoanhThuNam)+" VNĐ");
        
        pnlDoanhThu.revalidate();
        pnlDoanhThu.repaint();
    }

    public void loadBieuDoMonAn() {
        LoaiMon lm = null;
        if (cboLoaiMon.getSelectedIndex() == 0) {
            lm = new LoaiMon("%", "%");
        } else {
            lm = (LoaiMon) cboLoaiMon.getSelectedItem();
        }

        if (lm == null) {
            return;
        }
        List<DoanhThuMonAn> list = TKdao.getSum(lm.getMaLoai());

        // Tạo dataset mới cho biểu đồ
        DefaultPieDataset dataset = new DefaultPieDataset();
        for (DoanhThuMonAn lm1 : list) {
            dataset.setValue(lm1.getTenMon(), lm1.getSoLuong());
        }

        // Tạo biểu đồ mới với dữ liệu
        JFreeChart chart = ChartFactory.createPieChart(
                "Món ăn", // Tiêu đề biểu đồ
                dataset, // Dữ liệu biểu đồ
                false,
                true,
                false
        );

        // Lấy đối tượng PiePlot từ biểu đồ
        PiePlot plot = (PiePlot) chart.getPlot();
        plot.setLabelGenerator(new StandardPieSectionLabelGenerator("{0} - {2}"));
        // {0} Tên dữ liệu
        // {1} giá trị dữ liệu
        // {2} giá trị dữ liệu theo phần trăm
        // {3} tổng các giá trị

        // Xóa các thành phần cũ trong pnlThongKe
        pnlThongKe.removeAll();

        // Tạo ChartPanel từ biểu đồ và thiết lập kích thước
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setBounds(0, 0, pnlThongKe.getWidth(), pnlThongKe.getHeight());
        pnlThongKe.add(chartPanel, JLayeredPane.PALETTE_LAYER);

        // Cập nhật giao diện
        pnlThongKe.revalidate();
        pnlThongKe.repaint();

    }

    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblDoanhThuCT.getModel();
        model.setRowCount(0);
        long tongDoanhThu = 0;
        try {
            List<DoanhThuCT> list = TKdao.getDoanhThuCT(clrTuNgayCT.getDate(), clrDenNgayCT.getDate());
            for (DoanhThuCT dt : list) {
                try {
                    double tongTien = daoct.selectSum(dt.getMaHD());
                    tongDoanhThu += tongTien;
                    Object[] row = {
                        dt.getMaHD(),
                        fmThoiGianCT.format(dt.getNgayLap()),
                        dt.getMaKH(),
                        fmTien.format(tongTien) + " VNĐ"
                    };
                    model.addRow(row);
                } //        } catch (Exception e) {
                //            MsgBox.alert(this, "Lỗi truy vần dữ liệu!");
                //        }
                catch (SQLException ex) {
                    Logger.getLogger(QuanLyHoaDonJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            lblTongDoanhThu.setText("Tổng doanh thu: " + fmTien.format(tongDoanhThu) + " VNĐ");
        } catch (Exception e) {
            // Thông báo lỗi nếu có vấn đề với việc lấy danh sách
            MsgBox.alert(this, "Lỗi khi lấy danh sách doanh thu!");
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongKeJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboLoaiMon;
    private com.toedter.calendar.JDateChooser clrDenNgayCT;
    private com.toedter.calendar.JDateChooser clrTuNgayCT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTongDoanhThu;
    private javax.swing.JLabel lblTongDoanhThuNam;
    private javax.swing.JPanel pnlDoanhThu;
    private javax.swing.JPanel pnlThongKe;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblDoanhThuCT;
    private com.toedter.calendar.JYearChooser ycrNam;
    // End of variables declaration//GEN-END:variables
}
